/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package bilboka.messagebot

import bilboka.core.book.domain.FuelRecord
import bilboka.core.exception.VehicleNotFoundException
import io.mockk.confirmVerified
import io.mockk.every
import io.mockk.junit5.MockKExtension
import io.mockk.verify
import org.junit.jupiter.api.Test
import org.junit.jupiter.api.extension.ExtendWith

@ExtendWith(MockKExtension::class)
class FuelRecordAdderTest : AbstractMessageBotTest() {

    @Test
    fun sendAddFuelRequest_callsAddFuelExecutor() {
        every { carBookExecutor.addFuelRecord(any(), any(), any()) } returns FuelRecord(
            amount = 30.0, costNOK = 300.0
        )

        messagebot.processMessage("Drivstoff testbil 30l 300kr", senderID)

        verify {
            botMessenger.sendMessage(
                "Registrert tanking av testbil, 30.0 liter for 300.0 kr, 10.0 kr/l",
                senderID
            )
        }
        verify { carBookExecutor.addFuelRecord("testbil", 30.0, 300.0) }
        confirmVerified(botMessenger, carBookExecutor)
    }

    @Test
    fun sendAddFuelRequestDifferentCase_callsAddFuelExecutor() {
        every { carBookExecutor.addFuelRecord(any(), any(), any()) } returns FuelRecord(
            amount = 30.0, costNOK = 300.0
        )

        messagebot.processMessage("fylt testbil 30.2 L 300.60 Kr", senderID)

        verify {
            botMessenger.sendMessage(
                "Registrert tanking av testbil, 30.0 liter for 300.0 kr, 10.0 kr/l",
                senderID
            )
        }
        verify { carBookExecutor.addFuelRecord("testbil", 30.2, 300.6) }
        confirmVerified(botMessenger, carBookExecutor)
    }

    @Test
    fun sendAddFuelRequestDifferentCaseWithComma_callsAddFuelExecutor() {
        every { carBookExecutor.addFuelRecord(any(), any(), any()) } returns FuelRecord(
            amount = 30.0, costNOK = 300.0
        )

        messagebot.processMessage("Hei drivstoff XC 70 30,44 l 3000,07 kr.. :D", senderID)

        verify { botMessenger.sendMessage("Registrert tanking av XC 70, 30.0 liter for 300.0 kr, 10.0 kr/l", senderID) }
        verify { carBookExecutor.addFuelRecord("XC 70", 30.44, 3000.07) }
        confirmVerified(botMessenger, carBookExecutor)
    }

    @Test
    fun sendAddFuelRequestForUnknownCar_answersCarUnknown() {
        every { carBookExecutor.addFuelRecord(any(), any(), any()) } throws VehicleNotFoundException("Hei!")

        messagebot.processMessage("Drivstoff testbil 30l 300kr", senderID)

        verify { botMessenger.sendMessage("Kjenner ikke til bil testbil", senderID) }
        confirmVerified(botMessenger)
    }
}
